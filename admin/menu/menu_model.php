<?php/**  * Tệp tin model của menu trong admin * Vị trí : admin/menu/menu_model.php  */if ( ! defined('BASEPATH')) exit('403');/** Thêm menu */function add_menu(){		hook_action('add_menu');		$hmdb = new MySQL(true, DB_NAME, DB_HOST, DB_USER, DB_PASSWORD, DB_CHARSET);		$menu_name = hm_post('menu_name');	$tableName=DB_PREFIX.'object';	$values["name"] = MySQL::SQLValue($menu_name);	$values["key"] = MySQL::SQLValue('menu');	$values["parent"] = MySQL::SQLValue('0');	$insert_id = $hmdb->InsertRow($tableName, $values);	/** show latest */	$latest=array(						'id'=>$insert_id,					'name'=>$menu_name,					'key'=>'menu',					'parent'=>'0',				);	return hm_json_encode(array('latest'=>$latest));	}/** Sửa menu */function edit_menu($id){		hook_action('edit_menu');		$hmdb = new MySQL(true, DB_NAME, DB_HOST, DB_USER, DB_PASSWORD, DB_CHARSET);		$menu_id = hm_get('id');	$taxonomy = hm_post('taxonomy');	$registed_request = hm_post('registed_request');	$custom_permalink_label = trim(hm_post('custom_permalink_label'));	$custom_permalink_url = trim(hm_post('custom_permalink_url'));		/** taxonomy */	if(is_array($taxonomy)){				$tableName = DB_PREFIX.'object';		$insert_id_array = array();				foreach($taxonomy as $tax_id){						/** insert menu item */			$args = array(							'name'=>'name',							'id'=>$tax_id,						);			$tax_name = get_tax_val($args);						$data_array = array(							'name' => MySQL::SQLValue($tax_name),							'key' => MySQL::SQLValue('menu_item'),							'parent' => MySQL::SQLValue($menu_id),							'order_number' => MySQL::SQLValue(0, MySQL::SQLVALUE_NUMBER),						);			$insert_id_array[$tax_id]=$hmdb->InsertRow($tableName, $data_array);						}				/** tạo field cho các menu item vừa insert */		foreach($insert_id_array as $tax_id => $insert_id){			if(is_numeric($insert_id)){								$tableName=DB_PREFIX.'field';								$args = array(							'name'=>'name',							'id'=>$tax_id,						);				$tax_name = get_tax_val($args);							$data_array=array(						'name'=>MySQL::SQLValue('menu_name'),						'val'=>MySQL::SQLValue($tax_name),						'object_id'=>MySQL::SQLValue($insert_id),						'object_type'=>MySQL::SQLValue('menu_item'),					);				$hmdb->InsertRow($tableName, $data_array);								$tableRequestName=DB_PREFIX.'request_uri';				$whereArray=array(								'object_id'=>MySQL::SQLValue($tax_id),								'object_type'=>MySQL::SQLValue('taxonomy'),							);				$hmdb->SelectRows($tableRequestName, $whereArray);				if( $hmdb->HasRecords() ){					$row=$hmdb->Row();					$request_id = $row->id;					$data_array=array(							'name'=>MySQL::SQLValue('menu_request_uri'),							'val'=>MySQL::SQLValue($request_id),							'object_id'=>MySQL::SQLValue($insert_id),							'object_type'=>MySQL::SQLValue('menu_item'),						);					$hmdb->InsertRow($tableName, $data_array);				}			}		}	}		/** registed_request */	if(is_array($registed_request)){				$tableName = DB_PREFIX.'object';		$insert_id_array = array();				foreach($registed_request as $request){						$request_data = registed_request($request);			$request_label = $request;			if(isset($request_data['args']['name']) AND $request_data['args']['name']!=''){				$request_label = $request_data['args']['name'];			}							/** insert menu item */			$data_array = array(							'name' => MySQL::SQLValue($request_label),							'key' => MySQL::SQLValue('menu_item'),							'parent' => MySQL::SQLValue($menu_id),							'order_number' => MySQL::SQLValue(0, MySQL::SQLVALUE_NUMBER),						);			$insert_id_array[$request]=$hmdb->InsertRow($tableName, $data_array);		}				/** tạo field cho các menu item vừa insert */		foreach($insert_id_array as $request => $insert_id){			if(is_numeric($insert_id)){								$request_data = registed_request($request);				$request_label = $request;				if(isset($request_data['args']['name']) AND $request_data['args']['name']!=''){					$request_label = $request_data['args']['name'];				}								$tableName=DB_PREFIX.'field';				$data_array=array(						'name'=>MySQL::SQLValue('menu_name'),						'val'=>MySQL::SQLValue($request_label),						'object_id'=>MySQL::SQLValue($insert_id),						'object_type'=>MySQL::SQLValue('menu_item'),					);				$hmdb->InsertRow($tableName, $data_array);								$request = BASE_URL.$request;				$data_array=array(						'name'=>MySQL::SQLValue('menu_request_uri'),						'val'=>MySQL::SQLValue($request),						'object_id'=>MySQL::SQLValue($insert_id),						'object_type'=>MySQL::SQLValue('menu_item'),					);				$hmdb->InsertRow($tableName, $data_array);			}		}			}		/** custom permalink */	if($custom_permalink_label !=''){				if($custom_permalink_url == ''){			$custom_permalink_url = '#';		}				$tableName = DB_PREFIX.'object';				/** insert menu item */		$data_array = array(						'name' => MySQL::SQLValue($custom_permalink_label),						'key' => MySQL::SQLValue('menu_item'),						'parent' => MySQL::SQLValue($menu_id),						'order_number' => MySQL::SQLValue(0, MySQL::SQLVALUE_NUMBER),					);		$insert_id=$hmdb->InsertRow($tableName, $data_array);				/** tạo field cho các menu item vừa insert */		if(is_numeric($insert_id)){						$tableName=DB_PREFIX.'field';			$data_array=array(					'name'=>MySQL::SQLValue('menu_name'),					'val'=>MySQL::SQLValue($custom_permalink_label),					'object_id'=>MySQL::SQLValue($insert_id),					'object_type'=>MySQL::SQLValue('menu_item'),				);			$hmdb->InsertRow($tableName, $data_array);						$data_array=array(					'name'=>MySQL::SQLValue('menu_request_uri'),					'val'=>MySQL::SQLValue($custom_permalink_url),					'object_id'=>MySQL::SQLValue($insert_id),					'object_type'=>MySQL::SQLValue('menu_item'),				);			$hmdb->InsertRow($tableName, $data_array);		}			}	}/** Xóa menu */function delete_menu($menu_id){		hook_action('delete_menu');	$hmdb = new MySQL(true, DB_NAME, DB_HOST, DB_USER, DB_PASSWORD, DB_CHARSET);		$tableName=DB_PREFIX."object";	$whereArray=array(					'parent'=>MySQL::SQLValue($menu_id),					'key'=>MySQL::SQLValue('menu_item'),				);	$hmdb->SelectRows($tableName, $whereArray);	$menu_item_ids =  array();	while( $row=$hmdb->Row() ){		$menu_item_ids[] = $row->id;	}	foreach($menu_item_ids as $menu_item_id){		delete_menu_item($menu_item_id);	}		$whereArray = array (					'key'=>MySQL::SQLValue('menu'),					'id'=>MySQL::SQLValue($menu_id, MySQL::SQLVALUE_NUMBER),				);	$hmdb->DeleteRows($tableName, $whereArray);	}/** Xóa menu item */function delete_menu_item($item_id){		hook_action('delete_menu_item');	$hmdb = new MySQL(true, DB_NAME, DB_HOST, DB_USER, DB_PASSWORD, DB_CHARSET);		$tableName=DB_PREFIX."object";	$whereArray=array(					'parent'=>MySQL::SQLValue($item_id),					'key'=>MySQL::SQLValue('menu_item'),				);	$hmdb->SelectRows($tableName, $whereArray);	$sub_item_ids =  array();	while( $row=$hmdb->Row() ){		$sub_item_ids[] = $row->id;	}	foreach($sub_item_ids as $sub_item_id){		delete_menu_item($sub_item_id);	}		$whereArray = array (					'key'=>MySQL::SQLValue('menu_item'),					'id'=>MySQL::SQLValue($item_id, MySQL::SQLVALUE_NUMBER),				);	$hmdb->DeleteRows($tableName, $whereArray);	}function get_menu_item($id){		hook_action('get_menu_item');	$hmdb = new MySQL(true, DB_NAME, DB_HOST, DB_USER, DB_PASSWORD, DB_CHARSET);		$menu_item = array();	$tableName=DB_PREFIX."object";	$whereArray=array(						'parent'=>MySQL::SQLValue($id),						'key'=>MySQL::SQLValue('menu_item'),					);		$hmdb->SelectRows($tableName, $whereArray,NULL,'order_number','ASC');		while( $row=$hmdb->Row() ){		$menu_item[]=$row;	}		return $menu_item;	}	function edit_menu_item($id){		hook_action('edit_menu_item');		$hmdb = new MySQL(true, DB_NAME, DB_HOST, DB_USER, DB_PASSWORD, DB_CHARSET);		foreach ( $_POST as $post_key => $post_val ){		if(is_array($post_val)){ $post_val = hm_json_encode($post_val); }		$tableName=DB_PREFIX.'field';				$data_array=array(						'name'=>MySQL::SQLValue($post_key),						'val'=>MySQL::SQLValue($post_val),						'object_id'=>MySQL::SQLValue($id),						'object_type'=>MySQL::SQLValue('menu_item'),					);		$whereArray = array (						'object_id'=>$id,						'name'=>MySQL::SQLValue($post_key),						'object_type'=>MySQL::SQLValue('menu_item'),					);		$hmdb->AutoInsertUpdate($tableName, $data_array, $whereArray);			}		$array = array('id'=>$id,'status'=>TRUE);	return hm_json_encode($array);	}function menu_select_choise($args=array()){		if(!is_array($args)){		parse_str($args, $args);	}		hook_action('menu_select_choise');		if(isset($args['checked'])){$checked = $args['checked'];}else{$checked = 0;}	if(isset($args['name'])){$name = $args['name'];}else{$name = 'menu';}		$hmdb = new MySQL(true, DB_NAME, DB_HOST, DB_USER, DB_PASSWORD, DB_CHARSET);		$tableName=DB_PREFIX."object";	$whereArray=array('key'=>MySQL::SQLValue('menu'));		$hmdb->SelectRows($tableName, $whereArray);	$rowCount = $hmdb->RowCount();	if(is_numeric($rowCount)){				$options[]=array('value'=>'0','label'=>hm_lang('select_a_menu'));		while($row=$hmdb->Row()){			$options[]=array('value'=>$row->id,'label'=>$row->name);		}				$field_array['input_type']='select';		$field_array['name']=$name;		$field_array['input_option']=$options;		$field_array['default_value']=$checked;		$field_array['addClass']='choise_menu';				build_input_form($field_array);	}}/** kiểm tra menu có id này tồn tại không */function isset_menu_id($id){		hook_action('isset_menu_id');		$hmdb = new MySQL(true, DB_NAME, DB_HOST, DB_USER, DB_PASSWORD, DB_CHARSET);				$tableName=DB_PREFIX."object";	$whereArray=array(					'id'=>MySQL::SQLValue($id, MySQL::SQLVALUE_NUMBER),					'key'=>MySQL::SQLValue('menu'),	);	$hmdb->SelectRows($tableName, $whereArray);		if( $hmdb->HasRecords() ){		return TRUE;	}else{		return FALSE;	}	}/** lưu thứ tự các menu item trong menu */function save_menu_item_order($id){		hook_action('save_menu_item_order');		$hmdb = new MySQL(true, DB_NAME, DB_HOST, DB_USER, DB_PASSWORD, DB_CHARSET);	$name = hm_post('name');	$json = hm_post('json');	$json = stripslashes($json);	$order_array = json_decode($json,TRUE);	$tableName = DB_PREFIX."object";			/** cập nhật tên menu */	$valuesArray = array(	   'name' => MySQL::SQLValue($name),	);	$whereArray = array(	   'key' => MySQL::SQLValue('menu'),	   'id' => MySQL::SQLValue($id),	);	$hmdb->UpdateRows($tableName, $valuesArray, $whereArray);		$i=1;	foreach($order_array as $menu_item){				$id_menu_item = $menu_item['id'];				/** cập nhật thứ tự menu item */		$valuesArray = array(		   'order_number' => MySQL::SQLValue($i, MySQL::SQLVALUE_NUMBER),		   'parent' => MySQL::SQLValue($id),		);		$whereArray = array(		   'key' => MySQL::SQLValue('menu_item'),		   'id' => MySQL::SQLValue($id_menu_item),		);		$hmdb->UpdateRows($tableName, $valuesArray, $whereArray);				if(isset($menu_item['children'])){			$children = $menu_item['children'];			update_menu_item_children($id_menu_item,$children);		}					$i++;			}	}/** cập nhật menu cha của menu item */function update_menu_item_children($id,$children){		hook_action('update_menu_item_children');		$hmdb = new MySQL(true, DB_NAME, DB_HOST, DB_USER, DB_PASSWORD, DB_CHARSET);		$tableName = DB_PREFIX."object";		$i=1;	foreach ($children as $children_array){		$children_id = $children_array['id'];		/** cập nhật thứ tự và menu cha */		$valuesArray = array(		   'order_number' => MySQL::SQLValue($i),		   'parent' => MySQL::SQLValue($id),		);		$whereArray = array(		   'key' => MySQL::SQLValue('menu_item'),		   'id' => MySQL::SQLValue($children_id),		);		$hmdb->UpdateRows($tableName, $valuesArray, $whereArray);				if(isset($children_array['children'])){			$sub_children = $children_array['children'];			update_menu_item_children($children_id,$sub_children);		}	$i++;		}}/** hiển thị nestable */function nestable($args_menu,$parent=0){	foreach($args_menu as $menu_item){		$id = $menu_item->id;		$menu_name = get_men_val(array('name'=>'menu_name','id'=>$id));		$menu_class = get_men_val(array('name'=>'menu_class','id'=>$id));		$menu_attr = get_men_val(array('name'=>'menu_attr','id'=>$id));		$menu_icon = get_men_val(array('name'=>'menu_icon','id'=>$id));		$menu_request_uri = get_men_val(array('name'=>'menu_request_uri','id'=>$id));	?>		<li class="dd-item" data-id="<?php echo $id; ?>">			<div data-id="<?php echo $id; ?>" class="dd-handle">			<span><?php echo $menu_name; ?></span>		</div>					<form data-id="<?php echo $id; ?>" action="?run=menu_ajax.php&id=<?php echo $id; ?>&action=edit_item" method="post" class="ajaxForm ajaxFormmenuEditItem">						<div class="dd-handle-btn" data-id="<?php echo $id; ?>">				<i class="fa fa-cog"></i>			</div>			<div class="dd-option-panel" data-id="<?php echo $id; ?>">				<div class="row">					<div class="col-md-6">						<?php						$field_array = array(											'nice_name'=>hm_lang('navigation_label'),											'name'=>'menu_name',											'input_type'=>'text',											'placeholder'=>hm_lang('you_can_rename_the_new_one'),											'default_value'=>$menu_name,											'handle' => FALSE,										);						build_input_form($field_array);						?>					</div>					<div class="col-md-6">						<?php						$field_array = array(											'nice_name'=>hm_lang('css_class'),											'name'=>'menu_class',											'input_type'=>'text',											'placeholder'=>hm_lang('add_css_classes_for_better_customization'),											'default_value'=>$menu_class,											'handle' => FALSE,										);						build_input_form($field_array);						?>					</div>				</div>				<div class="row">					<div class="col-md-6">						<?php						$field_array = array(											'nice_name'=>hm_lang('custom_attributes'),											'name'=>'menu_attr',											'input_type'=>'text',											'placeholder'=>hm_lang('example').' : onclick=&quot;dropdown_menu()&quot;',											'default_value'=>$menu_attr,											'handle' => FALSE,										);						build_input_form($field_array);						?>					</div>					<div class="col-md-6">						<?php							$field_array = array(										'name'=>'menu_icon',										'label'=>hm_lang('select_the_icon'),										'imageonly'=>TRUE,									);							if(isset($menu_icon)){$field_array['default_value']=$menu_icon;}							media_file_input($field_array);						?>					</div>					<div class="col-md-12">						<?php						if(is_numeric($menu_request_uri)){							$request_uri = get_uri_data("id=$menu_request_uri");							$uri = $request_uri->uri;							$url = BASE_URL.$uri;						}else{							$url = $menu_request_uri;						}												$field_array = array(											'nice_name'=>hm_lang('permalink').' <a href="'.$url.'" target="_blank">'.$url.'</a>',											'name'=>'menu_request_uri',											'default_value'=>$menu_request_uri,											'input_type'=>'request_uri',											'placeholder'=>hm_lang('enter_the_link_when_you_click_on_the_menu'),											'handle' => FALSE,										);						build_input_form($field_array);						?>					</div>				</div>			</div>			<div data-id="<?php echo $id; ?>" class="dd-option">				<input type="submit" data-id="<?php echo $id; ?>" class="dd-save-btn btn btn-success btn-xs" value="<?php echo hm_lang('save_changes'); ?>"/>				<span data-id="<?php echo $id; ?>" class="dd-remove-btn btn btn-danger btn-xs"><?php echo hm_lang('remove'); ?></span>			</div>					</form>				<?php		/** menu con */						$args_sub_menu = get_menu_item($id);						if(sizeof($args_sub_menu)>0){							echo '<ol class="dd-list">'."\n";									nestable($args_sub_menu,$id);								echo '</ol>'."\n";						}						?>			</li>	<?php	}}function save_menu_location($input){		foreach($input as $location => $menu_id){		$args = array();		$args['section'] = 'theme_setting';		$args['key'] = $location;		$args['value'] = $menu_id;		set_option($args);	}	}?>